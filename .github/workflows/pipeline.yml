name: CI Checks

on:
  pull_request:
    branches:
      - main

  push:
    branches:
      - main
jobs:
  test:
    needs:
      - format-check
    name: Test Application
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v4
        with:
          go-version: ^1.21

      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
        
      - name: Run Test
        run: make test
      
      - name: Coverage Check
        run: make coverage

      - name: Generate Report
        run: make report

      - name: Copy Files
        run: |
          mkdir reports
          cp cover.html reports/.

      - name: Archive
        uses: actions/upload-artifact@v3
        with:
          name: reports
          path: reports

  format-check:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v4
        with:
          go-version: ^1.21

      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
      
      - name: Run Format Check
        run: make check-format
        
  build:
    name: Build App
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v4
        with:
          go-version: ^1.21

      - name: Check out code into the go module directory
        uses: actions/checkout@v3

      - name: Build
        run: make build

      - name: Copy Files
        run: |
          mkdir artifacts
          cp api artifacts/.

      - name: Archive
        uses: actions/upload-artifact@v3
        with:
          name: api
          path: artifacts

  deliver:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download binary
        uses: actions/download-artifact@v3
        with:
          name: api
      
      # - name: Create Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ github.ref }}
      #     release_name: Release ${{ github.ref }}
      #     body: |
      #       Still in experimentation phase
      #     draft: true
      #     prerelease: true

      # - name: Upload Release Binary
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: api
      #     asset_name: api
      #     asset_content_type: application/octet-stream

      - name: Create Release with Binary
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ github.ref }}
          body: Still in experimentation phase
          draft: true
          prerelease: true
          files: api

  deploy-function:
    name: Deploy FaaS
    runs-on: ubuntu-latest
    needs: test
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: Deploy function
        id: deploy
        uses: google-github-actions/deploy-cloud-functions@main
        with:
          name: translate
          entry_point: Translate
          runtime: go121

      - id: test
        run: curl "${{ steps.deploy.outputs.url }}/hello"

  deploy-paas:
    name: Deploy PaaS
    runs-on: ubuntu-latest
    needs: test
    if: ${{github.event_name == 'push' && github.ref == 'refs/heads/main'}}
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: Deploy App
        id: deploy
        uses: google-github-actions/deploy-appengine@v1

      - id: test
        run: curl "${{ steps.deploy.outputs.url }}/translate/hello"
